// Script simple de pr√©paration avant build
const fs = require('fs');
const path = require('path');

console.log('üîß Pr√©paration du build...');

// 1. Cr√©er le dossier steamcmd s'il n'existe pas
const steamcmdDir = path.join(__dirname, '..', 'steamcmd');
if (!fs.existsSync(steamcmdDir)) {
  fs.mkdirSync(steamcmdDir, { recursive: true });
  console.log('üìÅ Dossier steamcmd cr√©√©');
}

// 2. V√©rifier si SteamCMD est pr√©sent
const platform = process.platform;
const steamcmdBinary = platform === 'win32' ? 'steamcmd.exe' : 'steamcmd.sh';
const steamcmdPath = path.join(steamcmdDir, steamcmdBinary);

if (fs.existsSync(steamcmdPath)) {
  console.log('‚úÖ SteamCMD trouv√©:', steamcmdPath);

  // Rendre ex√©cutable sur Linux/Mac
  if (platform !== 'win32') {
    try {
      fs.chmodSync(steamcmdPath, '755');
      console.log('üîê Permissions ex√©cutables d√©finies');
    } catch (error) {
      console.log('‚ö†Ô∏è Impossible de d√©finir les permissions:', error.message);
    }
  }
} else {
  console.log('‚ö†Ô∏è SteamCMD non trouv√© dans:', steamcmdPath);
  console.log('');
  console.log('üì• Pour inclure SteamCMD dans votre build:');
  console.log('   1. T√©l√©chargez SteamCMD depuis https://steamcmd.net/');

  if (platform === 'win32') {
    console.log('   2. Extrayez steamcmd.exe dans le dossier steamcmd/');
  } else {
    console.log('   2. Extrayez steamcmd.sh dans le dossier steamcmd/');
  }

  console.log('   3. Relancez npm run build');
  console.log('');
  console.log('üí° Ou l\'application tentera une d√©tection automatique au runtime');
}

// 3. Cr√©er un config.json par d√©faut pour la distribution
const configPath = path.join(__dirname, '..', 'config.json');
const defaultConfig = {
  "steamApiKey": null,
  "modsPath": null,
  "steamcmdPath": null
};

// Cr√©er ou r√©initialiser le config pour la distribution
console.log('üßπ Pr√©paration du config pour la distribution');
fs.writeFileSync(configPath, JSON.stringify(defaultConfig, null, 2));
console.log('‚ú® Config par d√©faut cr√©√©');

console.log('‚úÖ Pr√©paration termin√©e\n');